{"version":3,"file":"static/webpack/static/development/pages/blog/entry.js.ce6243d2898a282dc24c.hot-update.js","sources":["webpack:///./components/Post.js"],"sourcesContent":["import React from 'react'\nimport { withRouter } from 'next/router'\nimport { graphql } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport ErrorMessage from './ErrorMessage'\nimport PostVoteUp from './PostVoteUp'\nimport PostVoteDown from './PostVoteDown'\nimport PostVoteCount from './PostVoteCount'\n\nfunction Post({ data: { error, web } }) {\n  console.log(web)\n  if (error) return <ErrorMessage message='Error loading blog post.' />\n  if (web) {\n    return (\n      <section>\n        <div key={Post.id}>\n          <h1>{Post.title}</h1>\n          <p>\n            ID: {Post.id}\n            <br />\n            URL: {Post.url}\n          </p>\n          <span>\n            <PostVoteUp id={Post.id} votes={Post.votes} />\n            <PostVoteCount votes={Post.votes} />\n            <PostVoteDown id={Post.id} votes={Post.votes} />\n          </span>\n        </div>\n        <style jsx>{`\n          span {\n            display: flex;\n            font-size: 14px;\n            margin-right: 5px;\n          }\n        `}</style>\n      </section>\n    )\n  }\n  return <div>Loading</div>\n}\n\nconst post = gql`\n  query web($id: ID!) {\n    web(id: $id) {\n      Title\n    }\n  }\n`\n\n// The `graphql` wrapper executes a GraphQL query and makes the results\n// available on the `data` prop of the wrapped component (PostList)\nconst ComponentWithMutation = graphql(post, {\n  options: ({ router: { query } }) => ({\n    variables: {\n      id: query.id\n    }\n  }),\n  props: ({ data }) => ({\n    data\n  })\n})(Post)\n\nexport default withRouter(ComponentWithMutation)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAXA;AAAA;AAAA;AAuBA;AACA;AAAA;AACA;AACA;AACA;AASA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AADA;AAAA;AAKA;AAAA;AAAA;AACA;AADA;AAAA;AANA;AAWA;;;;A","sourceRoot":""}