{"version":3,"file":"static/webpack/static/development/pages/about.js.a88cbc5f391d40a9850d.hot-update.js","sources":["webpack:///./components/BasicPage.js"],"sourcesContent":["import React from 'react'\nimport { withRouter } from 'next/router'\nimport { graphql } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport ErrorMessage from './ErrorMessage'\nimport ReactMarkdown from 'react-markdown'\n\nfunction Post({ data: { error, basics } }) {\n  let basic = basics[0]\n  console.log(bas)\n  if (error) return <ErrorMessage message='Error loading blog post.' />\n  if (basic) {\n    return (\n      <section>\n        <div key={basic.id}>\n          <h1>{basic.Title}</h1>\n          <ReactMarkdown source={basic.Body} />\n        </div>\n      </section>\n    )\n  }\n  return <div>Loading</div>\n}\n\nconst post = gql`\n  query  {\n    basics( where: { URL: \"about\" }, limit: 1) {\n      Title\n      _id\n      Image {\n        url\n        ext\n        provider\n        size\n      }\n      Body\n      URL\n      createdAt\n      updatedAt\n    }\n  }\n`\n\n// The `graphql` wrapper executes a GraphQL query and makes the results\n// available on the `data` prop of the wrapped component (PostList)\nconst ComponentWithMutation = graphql(post, {\n  options: ({ router: { query } }) => ({\n    variables: {\n      url: query.url\n    }\n  }),\n  props: ({ data }) => ({\n    data\n  })\n})(Post)\n\nexport default withRouter(ComponentWithMutation)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAEA;AAAA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAoBA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AADA;AAAA;AAKA;AAAA;AAAA;AACA;AADA;AAAA;AANA;AAWA;;;;A","sourceRoot":""}