{"version":3,"file":"static/webpack/static/development/pages/work/entry.js.e9e0162eed5625b1fa06.hot-update.js","sources":["webpack:///./components/Post.jsx"],"sourcesContent":["// @ts-check\n\nimport React from 'react'\nimport { withRouter, Router, Link } from 'next/router'\nimport { graphql } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport ErrorMessage from './ErrorMessage'\nimport ReactMarkdown from 'react-markdown'\nimport Head from 'next/head'\nimport PostList from './PostList'\n\nfunction Post({ data: { error, webs } }) {\n  let web = webs[0];\n  let image = web.Image !== null ? <span id=\"image\" className=\"imgHero\"\n    style={{\n      backgroundImage: `url(https://strapi.hulea.org/${web.Image.url})`,\n      border: `1em solid #111`,\n      marginBottom: `20px`\n    }}></span> : '';\n  if (error) return <ErrorMessage message='Error loading blog post.' />\n  if (web) {\n    return (\n      <article>\n      <section>\n        <Head>\n          <title>{web.Title}</title>\n        </Head>\n        <div key={web.id}>\n          <h1>{web.Title}</h1>\n          {image}\n          <a prefetch=\"true\" target=\"_blank\" href={web.Link}>{web.Title}</a>\n          <ReactMarkdown source={web.Description} />\n        </div>\n      </section>\n      <PostList title={web.URL}></PostList>\n      <style jsx>{`\n          * {\n            box-sizing: border-box;\n          }\n          section {\n            padding-bottom: 20px;\n            max-width: 900px;\n            margin: 0 auto;\n          }\n          li {\n            display: block;\n            margin-bottom: 10px;\n          }\n          figure {\n            align-items: center;\n            display: flex;\n            margin-bottom: 2rem;\n            position: relative;\n          }\n          .imgHero {\n            border: 1rem solid #000;\n          }\n          a {\n            line-height: 1.5;\n            margin-bottom: 20px;\n            word-wrap: break-word;\n            font-size: 15px;\n            font-weight: 600;\n            letter-spacing: -0.25px;\n            text-decoration: none;\n            border-bottom: dashed 1px;\n          }\n          a:hover {\n            color: #ccc;\n            border-bottom: solid 1px;\n          }\n          span {\n            border: 1rem solid #000;\n          }\n          ul {\n            margin: 0;\n            padding: 0;\n          }\n          img {\n            object-fit: cover;\n          }\n          main > article > section {\n            border: 10px solid red;\n          }\n        `}</style>\n      </article>\n    )\n  }\n  return <div>Loading</div>\n}\n\nconst post = gql`\n  query webs($url: String!) {\n    webs( where: { URL: $url }, limit: 1) {\n      Title\n      _id\n      Image {\n        url\n        ext\n        provider\n        size\n      }\n      Description\n      Data\n      URL\n      Link\n      createdAt\n      updatedAt\n    }\n  }\n`\n\n// The `graphql` wrapper executes a GraphQL query and makes the results\n// available on the `data` prop of the wrapped component (PostList)\nconst ComponentWithMutation = graphql(post, {\n  options: ({ router: { query } }) => ({\n    variables: {\n      url: query.url\n    }\n  }),\n  props: ({ data }) => ({\n    data\n  })\n})(Post)\n\nexport default withRouter(ComponentWithMutation)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAZA;AAAA;AAAA;AAiEA;AACA;AAAA;AACA;AACA;AACA;AAsBA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AADA;AAAA;AAKA;AAAA;AAAA;AACA;AADA;AAAA;AANA;AAWA;;;;A","sourceRoot":""}