{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport fetch from 'isomorphic-fetch';\n\nrequire('es6-promise').polyfill();\n\nvar FormLabel =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormLabel, _React$Component);\n\n  function FormLabel() {\n    _classCallCheck(this, FormLabel);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FormLabel).apply(this, arguments));\n  }\n\n  _createClass(FormLabel, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"label\", {\n        htmlFor: this.props.htmlFor\n      }, this.props.title);\n    }\n  }]);\n\n  return FormLabel;\n}(React.Component);\n\nvar Form =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Form, _React$Component2);\n\n  function Form(props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var newState = {};\n      newState[e.target.name] = e.target.value;\n\n      _this.setState(newState);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      var toggleNav = function toggleNav() {\n        _this.setState(function (prevState) {\n          return {\n            isActive: !prevState.isActive\n          };\n        });\n\n        setTimeout(function () {\n          _this.setState(function (prevState) {\n            return {\n              isActive: !prevState.isActive\n            };\n          });\n        }, 2000);\n      };\n\n      var formData = {\n        first_name: _this.state.first_name,\n        last_name: _this.state.last_name,\n        email: _this.state.email,\n        message: _this.state.message\n      };\n\n      if (formData.first_name.length < 1 || formData.email.length < 1 || formData.last_name.length < 1 || formData.message.length < 1) {\n        return false;\n      }\n\n      var body = new FormData();\n      body.append(\"first_name\", formData.first_name);\n      body.append(\"last_name\", formData.last_name);\n      body.append(\"email\", formData.email);\n      body.append(\"message\", formData.message);\n      fetch('https://hulea.org/contact-form.php', {\n        method: 'POST',\n        mode: 'cors',\n        body: body\n      }).then(function (response) {\n        toggleNav();\n\n        if (response.status !== 200) {// dispatch(setError(response.status + '===>' + response.statusText + '===>' + response.url))\n        }\n\n        return response.json();\n      }).then(function (json) {// if (confirm('Thank you for your message. Can I erase the form?')) {\n        // }\n        ///dispatch(setData(json, q))\n      })[\"catch\"](function (err) {\n        alert('There was some problem with sending your message.');\n        console.log(err);\n      });\n\n      _this.setState({\n        first_name: '',\n        last_name: '',\n        email: '',\n        message: '',\n        isActive: true\n      });\n    });\n\n    _this.state = {\n      first_name: '',\n      last_name: '',\n      email: '',\n      message: '',\n      isActive: true\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"section\", null, React.createElement(\"form\", {\n        className: \"react-form\",\n        onSubmit: this.handleSubmit\n      }, React.createElement(\"h1\", null, \"Contact\"), React.createElement(\"h3\", {\n        className: this.state.isActive ? 'hide' : ''\n      }, \"Thanks!\"), React.createElement(\"fieldset\", {\n        className: \"form-group\"\n      }, React.createElement(FormLabel, {\n        htmlFor: \"first_name\",\n        title: \"First Name:\"\n      }), React.createElement(\"input\", {\n        id: \"first_name\",\n        className: \"form-input\",\n        name: \"first_name\",\n        type: \"text\",\n        required: true,\n        onChange: this.handleChange,\n        value: this.state.first_name\n      })), React.createElement(\"fieldset\", {\n        className: \"form-group\"\n      }, React.createElement(FormLabel, {\n        htmlFor: \"last_name\",\n        title: \"Last Name:\"\n      }), React.createElement(\"input\", {\n        id: \"last_name\",\n        className: \"form-input\",\n        name: \"last_name\",\n        type: \"text\",\n        required: true,\n        onChange: this.handleChange,\n        value: this.state.last_name\n      })), React.createElement(\"fieldset\", {\n        className: \"form-group\"\n      }, React.createElement(FormLabel, {\n        htmlFor: \"email\",\n        title: \"Email:\"\n      }), React.createElement(\"input\", {\n        id: \"email\",\n        className: \"form-input\",\n        name: \"email\",\n        type: \"email\",\n        required: true,\n        onChange: this.handleChange,\n        value: this.state.email\n      })), React.createElement(\"fieldset\", {\n        className: \"form-group\"\n      }, React.createElement(FormLabel, {\n        htmlFor: \"message\",\n        title: \"Message:\"\n      }), React.createElement(\"textarea\", {\n        id: \"message\",\n        className: \"form-textarea\",\n        name: \"message\",\n        required: true,\n        onChange: this.handleChange,\n        value: this.state.message\n      })), React.createElement(\"fieldset\", {\n        className: \"form-group\"\n      }, React.createElement(\"input\", {\n        id: \"formButton\",\n        className: \"button\",\n        type: \"submit\",\n        placeholder: \"Send message\"\n      }))));\n    }\n  }]);\n\n  return Form;\n}(React.Component);\n\nexport default Form;","map":null,"metadata":{},"sourceType":"module"}