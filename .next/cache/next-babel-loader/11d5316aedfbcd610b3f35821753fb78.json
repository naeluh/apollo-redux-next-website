{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _JSXStyle from \"styled-jsx/style\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query webs($url: String!) {\\n    webs( where: { URL: $url }, limit: 1) {\\n      Title\\n      _id\\n      Image {\\n        url\\n        ext\\n        provider\\n        size\\n      }\\n      Description\\n      Data\\n      URL\\n      Link\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// @ts-check\nimport React from 'react';\nimport { withRouter, Router, Link } from 'next/router';\nimport { graphql } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport ErrorMessage from './ErrorMessage';\nimport ReactMarkdown from 'react-markdown';\nimport Head from 'next/head';\nimport PostList from './PostList';\n\nfunction Post(_ref) {\n  var _ref$data = _ref.data,\n      error = _ref$data.error,\n      webs = _ref$data.webs;\n  var web = webs[0];\n  var image = web.Image !== null ? React.createElement(\"span\", {\n    id: \"image\",\n    className: \"imgHero\",\n    style: {\n      backgroundImage: \"url(https://strapi.hulea.org/\".concat(web.Image.url, \")\"),\n      border: \"1em solid #111\",\n      marginBottom: \"20px\"\n    }\n  }) : '';\n  if (error) return React.createElement(ErrorMessage, {\n    message: \"Error loading blog post.\"\n  });\n\n  if (web) {\n    return React.createElement(\"article\", {\n      className: \"jsx-1586328328\"\n    }, React.createElement(\"section\", {\n      className: \"jsx-1586328328\"\n    }, React.createElement(Head, null, React.createElement(\"title\", {\n      className: \"jsx-1586328328\"\n    }, web.Title), React.createElement(\"meta\", {\n      name: \"title\",\n      content: web.Title,\n      className: \"jsx-1586328328\"\n    }), React.createElement(\"meta\", {\n      name: \"description\",\n      content: web.Description,\n      className: \"jsx-1586328328\"\n    })), React.createElement(\"div\", {\n      key: web.id,\n      className: \"jsx-1586328328\"\n    }, React.createElement(\"h1\", {\n      className: \"jsx-1586328328\"\n    }, web.Title), image, React.createElement(\"a\", {\n      prefetch: \"true\",\n      target: \"_blank\",\n      href: web.Link,\n      className: \"jsx-1586328328\" + \" \" + \"dash-link\"\n    }, web.Title), React.createElement(ReactMarkdown, {\n      source: web.Description\n    }))), React.createElement(PostList, {\n      title: web.URL,\n      extraClass: \"worklist\"\n    }), React.createElement(_JSXStyle, {\n      id: \"1586328328\"\n    }, []));\n  }\n\n  return React.createElement(\"div\", null, \"Loading\");\n}\n\nvar post = gql(_templateObject()); // The `graphql` wrapper executes a GraphQL query and makes the results\n// available on the `data` prop of the wrapped component (PostList)\n\nvar ComponentWithMutation = graphql(post, {\n  options: function options(_ref2) {\n    var query = _ref2.router.query;\n    return {\n      variables: {\n        url: query.url\n      }\n    };\n  },\n  props: function props(_ref3) {\n    var data = _ref3.data;\n    return {\n      data: data\n    };\n  }\n})(Post);\nexport default withRouter(ComponentWithMutation);","map":null,"metadata":{},"sourceType":"module"}