{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport { ApolloProvider, getDataFromTree } from 'react-apollo';\nimport Head from 'next/head';\nimport initApollo from './initApollo'; // Gets the display name of a JSX component for dev tools\n\nfunction getComponentDisplayName(Component) {\n  return Component.displayName || Component.name || 'Unknown';\n}\n\nexport default (function (ComposedComponent) {\n  var _class, _temp;\n\n  return _temp = _class =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(WithApollo, _React$Component);\n\n    _createClass(WithApollo, null, [{\n      key: \"getInitialProps\",\n      value: function () {\n        var _getInitialProps = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(ctx) {\n          var serverState, composedInitialProps, apollo, state;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  // Initial serverState with apollo (empty)\n                  serverState = {\n                    apollo: {\n                      data: {}\n                    } // Evaluate the composed component's getInitialProps()\n\n                  };\n                  composedInitialProps = {};\n\n                  if (!ComposedComponent.getInitialProps) {\n                    _context.next = 6;\n                    break;\n                  }\n\n                  _context.next = 5;\n                  return ComposedComponent.getInitialProps(ctx);\n\n                case 5:\n                  composedInitialProps = _context.sent;\n\n                case 6:\n                  if (process.browser) {\n                    _context.next = 18;\n                    break;\n                  }\n\n                  apollo = initApollo();\n                  _context.prev = 8;\n                  _context.next = 11;\n                  return getDataFromTree(React.createElement(ApolloProvider, {\n                    client: apollo\n                  }, React.createElement(ComposedComponent, composedInitialProps)), {\n                    router: {\n                      asPath: ctx.asPath,\n                      pathname: ctx.pathname,\n                      query: ctx.query\n                    }\n                  });\n\n                case 11:\n                  _context.next = 15;\n                  break;\n\n                case 13:\n                  _context.prev = 13;\n                  _context.t0 = _context[\"catch\"](8);\n\n                case 15:\n                  // getDataFromTree does not call componentWillUnmount\n                  // head side effect therefore need to be cleared manually\n                  Head.rewind(); // Extract query data from the store\n\n                  state = {}; // Extract query data from the Apollo store\n\n                  serverState = _Object$assign(state, {\n                    apollo: {\n                      data: apollo.cache.extract()\n                    }\n                  });\n\n                case 18:\n                  return _context.abrupt(\"return\", _objectSpread({\n                    serverState: serverState\n                  }, composedInitialProps));\n\n                case 19:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[8, 13]]);\n        }));\n\n        function getInitialProps(_x) {\n          return _getInitialProps.apply(this, arguments);\n        }\n\n        return getInitialProps;\n      }()\n    }]);\n\n    function WithApollo(props) {\n      var _this;\n\n      _classCallCheck(this, WithApollo);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(WithApollo).call(this, props));\n      _this.apollo = initApollo(props.serverState.apollo.data);\n      return _this;\n    }\n\n    _createClass(WithApollo, [{\n      key: \"render\",\n      value: function render() {\n        return React.createElement(ApolloProvider, {\n          client: this.apollo\n        }, React.createElement(ComposedComponent, this.props));\n      }\n    }]);\n\n    return WithApollo;\n  }(React.Component), _defineProperty(_class, \"displayName\", \"WithApollo(\".concat(getComponentDisplayName(ComposedComponent), \")\")), _temp;\n});","map":null,"metadata":{},"sourceType":"module"}