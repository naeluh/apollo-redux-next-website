{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport Link from 'next/link';\nimport { withRouter } from 'next/router';\nvar links = [{\n  href: '/',\n  name: '127.0.0.1'\n}, {\n  href: '/work',\n  name: 'work'\n}, {\n  href: '/contact',\n  name: 'contact'\n}, {\n  href: '/about',\n  name: 'about'\n}];\n\nvar Header =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  function Header() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Header)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isActive: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleNav\", function () {\n      _this.setState(function (prevState) {\n        return {\n          isActive: !prevState.isActive\n        };\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"handleClick\",\n    value: function handleClick(event, url) {\n      event.preventDefault();\n      Router.push({\n        pathname: \"/work/\".concat(url),\n        asPath: \"/work/\".concat(url)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var pathname = this.props.pathname;\n      return React.createElement(\"header\", {\n        className: \"jsx-3585587421\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-3585587421\" + \" \" + ((this.state.isActive ? 'hide-overlay' : '') || \"\")\n      }, React.createElement(\"nav\", {\n        className: \"jsx-3585587421\"\n      }, React.createElement(\"ul\", {\n        className: \"jsx-3585587421\"\n      }, React.createElement(\"li\", {\n        onClick: this.toggleNav,\n        \"aria-label\": this.state.isActive ? 'closed' : 'open',\n        className: \"jsx-3585587421\" + \" \" + \"list one\"\n      }))), React.createElement(\"div\", {\n        \"aria-label\": this.state.isActive ? 'closed' : 'open',\n        className: \"jsx-3585587421\" + \" \" + \"overlay\"\n      }, React.createElement(\"div\", {\n        className: \"jsx-3585587421\" + \" \" + \"overlay-content\"\n      }, React.createElement(\"button\", {\n        id: \"close\",\n        onClick: this.toggleNav,\n        className: \"jsx-3585587421\"\n      }, React.createElement(\"span\", {\n        className: \"jsx-3585587421\"\n      }, \"close\")), React.createElement(\"ul\", {\n        id: \"weblist\",\n        className: \"jsx-3585587421\"\n      }, links.map(function (link, index) {\n        return React.createElement(\"li\", {\n          key: index + 1,\n          className: \"jsx-3585587421\" + \" \" + \"bk\"\n        }, React.createElement(Link, {\n          href: link.href\n        }, React.createElement(\"a\", {\n          prefetch: \"true\",\n          onClick: _this2.toggleNav,\n          href: link.href,\n          className: \"jsx-3585587421\" + \" \" + ((pathname === link.name ? 'is-active' : '') || \"\")\n        }, link.name)));\n      }))))), React.createElement(_JSXStyle, {\n        id: \"3585587421\"\n      }, [\".is-active.jsx-3585587421{-webkit-text-decoration:underline;text-decoration:underline;}\"]));\n    }\n  }]);\n\n  return Header;\n}(React.Component);\n/* \nconst Header = ({ router: { pathname } }) => (\n\n  <header>\n    <div className={this ? 'hide-overlay' : ''}>\n      <nav>\n        <ul>\n          <li onClick={toggleNav} className=\"list one\">\n            <button onClick={toggleNav} id=\"menu_butoon\" aria-label=\"closed\" ></button>\n          </li>\n        </ul>\n      </nav>\n      <div className=\"overlay\">\n        <div className=\"overlay-content\">\n          <div id=\"close\"><span>close</span></div>\n          <ul id=\"weblist\">\n            <li className=\"bk\">\n              <Link prefetch href='/'><a className={pathname === '/' ? 'is-active' : ''}>127.0.0.1</a></Link>\n            </li>\n            <li className=\"bk\">\n              <Link prefetch href='/work'><a className={pathname === '/work' ? 'is-active' : ''}>Work</a></Link>\n            </li>\n            <li className=\"bk\">\n              <Link prefetch href='/contact'><a className={pathname === '/contact' ? 'is-active' : ''}>Contact</a></Link>\n            </li>\n            <li className=\"bk\">\n              <Link prefetch href='/about'><a className={pathname === '/about' ? 'is-active' : ''}>About</a></Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n    <style jsx>{`\n      header {\n        position: fixed;\n        right: 100px;\n        z-index: 9999;\n        top: 0;\n      }\n      a {\n\n      }\n      .is-active {\n        text-decoration: underline;\n      }\n    `}</style>\n  </header>\n) */\n\n\nexport default withRouter(Header);","map":null,"metadata":{},"sourceType":"module"}