{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(loadDataSaga);\n\nimport { put, takeLatest } from 'redux-saga/effects';\nimport es6promise from 'es6-promise';\nimport fetch from 'isomorphic-unfetch';\nimport { actionTypes, loadDataSuccess, loadDataError } from './actions';\nes6promise.polyfill();\n\nfunction loadDataSaga() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function loadDataSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch('https://jsonplaceholder.typicode.com/users');\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return res.json();\n\n        case 6:\n          data = _context.sent;\n          _context.next = 9;\n          return put(loadDataSuccess(data));\n\n        case 9:\n          _context.next = 15;\n          break;\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 15;\n          return put(loadDataError(_context.t0));\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 11]]);\n}\n\nexport default takeLatest(actionTypes.LOAD_DATA, loadDataSaga);","map":null,"metadata":{},"sourceType":"module"}