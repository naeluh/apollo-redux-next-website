{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _JSXStyle from \"styled-jsx/style\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query basics($url: String!) {\\n    basics( where: { URL: $url }, limit: 1) {\\n      Title\\n      _id\\n      Image {\\n        url\\n        ext\\n        provider\\n        size\\n      }\\n      Body\\n      URL\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { withRouter } from 'next/router';\nimport { graphql } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport ErrorMessage from './ErrorMessage';\nimport ReactMarkdown from 'react-markdown';\nimport Head from 'next/head';\n\nfunction Post(_ref) {\n  var _ref$data = _ref.data,\n      error = _ref$data.error,\n      basics = _ref$data.basics;\n  var basic = basics !== undefined ? basics[0] : '';\n  if (error || basics === '') return React.createElement(ErrorMessage, {\n    message: \"Error loading blog post.\"\n  });\n\n  if (basic) {\n    return React.createElement(\"section\", {\n      className: \"jsx-3287268036\"\n    }, React.createElement(Head, null, React.createElement(\"title\", {\n      className: \"jsx-3287268036\"\n    }, basic.Title), React.createElement(\"meta\", {\n      name: \"title\",\n      content: basic.Title,\n      className: \"jsx-3287268036\"\n    }), React.createElement(\"meta\", {\n      name: \"description\",\n      content: basic.Body,\n      className: \"jsx-3287268036\"\n    })), React.createElement(\"div\", {\n      key: basic.id,\n      className: \"jsx-3287268036\"\n    }, React.createElement(\"h1\", {\n      className: \"jsx-3287268036\"\n    }, basic.Title), React.createElement(ReactMarkdown, {\n      source: basic.Body\n    })), React.createElement(_JSXStyle, {\n      id: \"3287268036\"\n    }, [\"*.jsx-3287268036{box-sizing:border-box;}\", \"section.jsx-3287268036{padding-bottom:20px;max-width:900px;margin:0 auto;}\", \"li.jsx-3287268036{display:block;margin-bottom:10px;}\", \"figure.jsx-3287268036{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin-bottom:2rem;position:relative;border:1rem solid #000;}\", \"a.jsx-3287268036{-webkit-text-decoration:none;text-decoration:none;padding-bottom:0;border:0;color:#000;font-weight:400;}\", \"ul.jsx-3287268036{margin:0;padding:0;}\", \"h4.jsx-3287268036{line-height:1.5;}\"]));\n  }\n\n  return React.createElement(\"div\", null, \"Loading\");\n}\n\nvar post = gql(_templateObject()); // The `graphql` wrapper executes a GraphQL query and makes the results\n// available on the `data` prop of the wrapped component (PostList)\n\nvar ComponentWithMutation = graphql(post, {\n  options: function options(_ref2) {\n    var pathname = _ref2.router.pathname;\n    return {\n      variables: {\n        url: pathname.replace('/', '')\n      }\n    };\n  },\n  props: function props(_ref3) {\n    var data = _ref3.data;\n    return {\n      data: data\n    };\n  }\n})(Post);\nexport default withRouter(ComponentWithMutation);","map":null,"metadata":{},"sourceType":"module"}