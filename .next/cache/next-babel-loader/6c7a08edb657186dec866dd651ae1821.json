{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(runClockSaga);\n\nimport { delay } from 'redux-saga';\nimport { call, put, take } from 'redux-saga/effects';\nimport es6promise from 'es6-promise';\nimport 'isomorphic-unfetch';\nimport { actionTypes, tickClock } from './actions';\nes6promise.polyfill();\n\nfunction runClockSaga() {\n  return _regeneratorRuntime.wrap(function runClockSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return take(actionTypes.START_CLOCK);\n\n        case 2:\n          if (!true) {\n            _context.next = 9;\n            break;\n          }\n\n          _context.next = 5;\n          return put(tickClock(false));\n\n        case 5:\n          _context.next = 7;\n          return call(delay, 800);\n\n        case 7:\n          _context.next = 2;\n          break;\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport default call(runClockSaga);","map":null,"metadata":{},"sourceType":"module"}